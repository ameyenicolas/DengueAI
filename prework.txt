library(foreign)
 
DBfeaturestrain<- read.csv("E:/DengueAI/dengue_features_train.csv", sep=",",dec=",")
DBlabelstrain <- read.csv("E:/DengueAI/dengue_labels_train.csv", sep=",",dec=",")
 
View(DBfeaturestrain)
View(DBlabelstrain)
install.packages("psych")
library(psych)

install.packages("plyr")
library(plyr)

DBfeaturestrain$ndvi_ne_numeric <- as.numeric(levels(DBfeaturestrain$ndvi_ne))[DBfeaturestrain$ndvi_ne]
DBfeaturestrain$ndvi_nw_numeric <- as.numeric(levels(DBfeaturestrain$ndvi_nw))[DBfeaturestrain$ndvi_nw]
DBfeaturestrain$ndvi_se_numeric <- as.numeric(levels(DBfeaturestrain$ndvi_se))[DBfeaturestrain$ndvi_se]
DBfeaturestrain$ndvi_sw_numeric <- as.numeric(levels(DBfeaturestrain$ndvi_sw))[DBfeaturestrain$ndvi_sw]

DBfeaturestrain$precipitation_amt_mm_numeric <- as.numeric(levels(DBfeaturestrain$precipitation_amt_mm))[DBfeaturestrain$precipitation_amt_mm]
DBfeaturestrain$reanalysis_air_temp_k_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_air_temp_k))[DBfeaturestrain$reanalysis_air_temp_k]
DBfeaturestrain$reanalysis_avg_temp_k_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_avg_temp_k))[DBfeaturestrain$reanalysis_avg_temp_k]
DBfeaturestrain$reanalysis_dew_point_temp_k_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_dew_point_temp_k))[DBfeaturestrain$reanalysis_dew_point_temp_k]
DBfeaturestrain$reanalysis_max_air_temp_k_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_max_air_temp_k))[DBfeaturestrain$reanalysis_max_air_temp_k]
DBfeaturestrain$reanalysis_min_air_temp_k_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_min_air_temp_k))[DBfeaturestrain$reanalysis_min_air_temp_k]
DBfeaturestrain$reanalysis_precip_amt_kg_per_m2_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_precip_amt_kg_per_m2))[DBfeaturestrain$reanalysis_precip_amt_kg_per_m2]
DBfeaturestrain$reanalysis_relative_humidity_percent_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_relative_humidity_percent))[DBfeaturestrain$reanalysis_relative_humidity_percent]
DBfeaturestrain$reanalysis_sat_precip_amt_mm_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_sat_precip_amt_mm))[DBfeaturestrain$reanalysis_sat_precip_amt_mm] DBfeaturestrain$reanalysis_specific_humidity_g_per_kg_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_specific_humidity_g_per_kg))[DBfeaturestrain$reanalysis_specific_humidity_g_per_kg]
DBfeaturestrain$reanalysis_tdtr_k_numeric <- as.numeric(levels(DBfeaturestrain$reanalysis_tdtr_k))[DBfeaturestrain$reanalysis_tdtr_k]
DBfeaturestrain$station_avg_temp_c_numeric <- as.numeric(levels(DBfeaturestrain$station_avg_temp_c))[DBfeaturestrain$station_avg_temp_c]
DBfeaturestrain$station_diur_temp_rng_c_numeric <- as.numeric(levels(DBfeaturestrain$station_diur_temp_rng_c))[DBfeaturestrain$station_diur_temp_rng_c]
DBfeaturestrain$station_max_temp_c_numeric <- as.numeric(levels(DBfeaturestrain$station_max_temp_c))[DBfeaturestrain$station_max_temp_c]
DBfeaturestrain$station_min_temp_c_numeric <- as.numeric(levels(DBfeaturestrain$station_min_temp_c))[DBfeaturestrain$station_min_temp_c]
DBfeaturestrain$station_precip_mm_numeric <- as.numeric(levels(DBfeaturestrain$station_precip_mm))[DBfeaturestrain$station_precip_mm]
 
DBmergedtrain <- merge(DBfeaturestrain, DBlabelstrain, by=c("city", "year", "weekofyear"))

View(DBmergedtrain)

DBmergedtrain <- DBmergedtrain[ c(1:4, 25:45) ]

View(DBmergedtrain)

DBmergedtrain$station_avg_temp_c_numeric <- DBmergedtrain$station_avg_temp_c_numeric + 273.15
DBmergedtrain$station_diur_temp_rng_c_numeric <- DBmergedtrain$station_diur_temp_rng_c_numeric + 273.15
DBmergedtrain$station_max_temp_c_numeric <- DBmergedtrain$station_max_temp_c_numeric + 273.15
DBmergedtrain$station_min_temp_c_numeric <- DBmergedtrain$station_min_temp_c_numeric+ 273.15
 
install.packages("fitdistrplus")
library(fitdistrplus)

DBmergedtrain$precipitation_amt_mm_numeric_log <- log(DBmergedtrain$precipitation_amt_mm_numeric)
DBmergedtrain$reanalysis_precip_amt_kg_per_m2_numeric_log <- log(DBmergedtrain$reanalysis_precip_amt_kg_per_m2_numeric)
DBmergedtrain$reanalysis_sat_precip_amt_mm_numeric_log <- log(DBmergedtrain$reanalysis_sat_precip_amt_mm_numeric)
DBmergedtrain$station_precip_mm_numeric_log <- log(DBmergedtrain$station_precip_mm_numeric)
DBmergedtrain$total_cases_log <- (DBmergedtrain$total_cases)^(1/2)

DBmergedtrain <- DBmergedtrain[ -c(9, 15, 17, 24) ]

X <- cbind(DBmergedtrain$ndvi_ne_numeric , DBmergedtrain$ndvi_nw_numeric, DBmergedtrain$ndvi_se_numeric, DBmergedtrain$ndvi_sw_numeric, DBmergedtrain$precipitation_amt_mm_numeric_log, DBmergedtrain$reanalysis_air_temp_k_numeric, DBmergedtrain$reanalysis_avg_temp_k_numeric, DBmergedtrain$reanalysis_dew_point_temp_k_numeric, DBmergedtrain$reanalysis_max_air_temp_k_numeric, DBmergedtrain$reanalysis_min_air_temp_k_numeric, DBmergedtrain$reanalysis_precip_amt_kg_per_m2_numeric_log, DBmergedtrain$reanalysis_relative_humidity_percent_numeric, DBmergedtrain$reanalysis_sat_precip_amt_mm_numeric_log, DBmergedtrain$reanalysis_specific_humidity_g_per_kg_numeric, DBmergedtrain$reanalysis_tdtr_k_numeric, DBmergedtrain$station_avg_temp_c_numeric, DBmergedtrain$station_diur_temp_rng_c_numeric, DBmergedtrain$station_max_temp_c_numeric, DBmergedtrain$station_min_temp_c_numeric, DBmergedtrain$station_precip_mm_numeric_log)
Y <- cbind(DBmergedtrain$total_cases_log , DBmergedtrain$total_cases, DBmergedtrain$city , DBmergedtrain$year , DBmergedtrain$weekofyear, DBmergedtrain$week_start_date)

listmissingdataX <- DBmergedtrain[!complete.cases(DBmergedtrain),]
View(listmissingdataX)
apply(DBmergedtrain,1,function(x) {sum(x == "")})
apply(DBmergedtrain,1,function(x) {sum(x == "",na.rm = TRUE)})
which((apply(DBmergedtrain,1,function(x) {sum(x == "",na.rm = TRUE)})>10))
DBmergedtrain <- DBmergedtrain[-c(183, 282, 443, 516, 608, 707, 920, 1019, 1232, 1331),]

X <- cbind(DBmergedtrain$ndvi_ne_numeric , DBmergedtrain$ndvi_nw_numeric, DBmergedtrain$ndvi_se_numeric, DBmergedtrain$ndvi_sw_numeric, DBmergedtrain$precipitation_amt_mm_numeric_log, DBmergedtrain$reanalysis_air_temp_k_numeric, DBmergedtrain$reanalysis_avg_temp_k_numeric, DBmergedtrain$reanalysis_dew_point_temp_k_numeric, DBmergedtrain$reanalysis_max_air_temp_k_numeric, DBmergedtrain$reanalysis_min_air_temp_k_numeric, DBmergedtrain$reanalysis_precip_amt_kg_per_m2_numeric_log, DBmergedtrain$reanalysis_relative_humidity_percent_numeric, DBmergedtrain$reanalysis_sat_precip_amt_mm_numeric_log, DBmergedtrain$reanalysis_specific_humidity_g_per_kg_numeric, DBmergedtrain$reanalysis_tdtr_k_numeric, DBmergedtrain$station_avg_temp_c_numeric, DBmergedtrain$station_diur_temp_rng_c_numeric, DBmergedtrain$station_max_temp_c_numeric, DBmergedtrain$station_min_temp_c_numeric, DBmergedtrain$station_precip_mm_numeric_log)

Y <- cbind(DBmergedtrain$total_cases_log , DBmergedtrain$total_cases, DBmergedtrain$city , DBmergedtrain$year , DBmergedtrain$weekofyear, DBmergedtrain$week_start_date)


install.packages("mice")
library(mice)
md.pattern(X)

install.packages("VIM")
library(VIM)
aggr_plot <- aggr(X, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(X), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))

tempX <- mice(X,m=5,maxit=50,meth='pmm',seed=500)

completedX <- complete(tempX,1)

names(X)[names(X)=="X1"] <- "ndvi_ne"
names(X)[names(X)=="X2"] <- "ndvi_nw"
names(X)[names(X)=="X3"] <- "ndvi_se"
names(X)[names(X)=="X4"] <- "ndvi_sw"
names(X)[names(X)=="X5"] <- "precipitation_amt_mm_log"
names(X)[names(X)=="X6"] <- "air_temp_k"
names(X)[names(X)=="X7"] <- "avg_temp_k"
names(X)[names(X)=="X8"] <- "dew_point_temp_k"
names(X)[names(X)=="X9"] <- "max_air_temp_k"
names(X)[names(X)=="X10"] <- "min_air_temp_k"
names(X)[names(X)=="X11"] <- "precip_amt_kg_per_m2_log"
names(X)[names(X)=="X12"] <- "relative_humidity_percent" 
names(X)[names(X)=="X13"] <- "sat_precip_amt_mm_log"
names(X)[names(X)=="X14"] <- "specific_humidity_g_per_kg"
names(X)[names(X)=="X15"] <- "tdtr_k"
names(X)[names(X)=="X16"] <- "station_avg_temp_c"
names(X)[names(X)=="X17"] <- "station_diur_temp_rng_c"
names(X)[names(X)=="X18"] <- "station_max_temp_c"
names(X)[names(X)=="X19"] <- "station_min_temp_c"
names(X)[names(X)=="X20"] <- "station_precip_mm_log" 

names(Y)[names(Y)=="1"] <- "total_cases_log"
names(Y)[names(Y)=="2"] <- "total_cases"
names(Y)[names(Y)=="3"] <- "city"
names(Y)[names(Y)=="4"] <- "year"
names(Y)[names(Y)=="5"] <- "weekofyear"
names(Y)[names(Y)=="6"] <- "week_start_date"

completedZ <- data.frame(cbind(Y,completedX))

outlierKD <- function(dt, var) {
     var_name <- eval(substitute(var),eval(dt))
     na1 <- sum(is.na(var_name))
     m1 <- mean(var_name, na.rm = T)
     par(mfrow=c(2, 2), oma=c(0,0,3,0))
     boxplot(var_name, main="With outliers")
     hist(var_name, main="With outliers", xlab=NA, ylab=NA)
     outlier <- boxplot.stats(var_name)$out
     mo <- mean(outlier)
     var_name <- ifelse(var_name %in% outlier, NA, var_name)
     boxplot(var_name, main="Without outliers")
     hist(var_name, main="Without outliers", xlab=NA, ylab=NA)
     title("Outlier Check", outer=TRUE)
     na2 <- sum(is.na(var_name))
     cat("Outliers identified:", na2 - na1, "n")
     cat("Propotion (%) of outliers:", round((na2 - na1) / sum(!is.na(var_name))*100, 1), "n")
     cat("Mean of the outliers:", round(mo, 2), "n")
     m2 <- mean(var_name, na.rm = T)
     cat("Mean without removing outliers:", round(m1, 2), "n")
     cat("Mean if we remove outliers:", round(m2, 2), "n")
     response <- readline(prompt="Do you want to remove outliers and to replace with NA? [yes/no]: ")
     if(response == "y" | response == "yes"){
          dt[as.character(substitute(var))] <- invisible(var_name)
          assign(as.character(as.list(match.call())$dt), dt, envir = .GlobalEnv)
          cat("Outliers successfully removed", "n")
          return(invisible(dt))
     } else{
          cat("Nothing changed", "n")
          return(invisible(var_name))
     }
}

outlierKD(completedZ, completedZ$ndvi_ne)
outlierKD(completedZ, completedZ$ndvi_nw)
outlierKD(completedZ, completedZ$ndvi_se)
outlierKD(completedZ, completedZ$ndvi_sw)
outlierKD(completedZ, completedZ$precipitation_amt_mm_log)
outlierKD(completedZ, completedZ$air_temp_k)
outlierKD(completedZ, completedZ$avg_temp_k)
outlierKD(completedZ, completedZ$dew_point_temp_k)
outlierKD(completedZ, completedZ$max_air_temp_k)
outlierKD(completedZ, completedZ$min_air_temp_k)
outlierKD(completedZ, completedZ$precip_amt_kg_per_m2_log)
outlierKD(completedZ, completedZ$relative_humidity_percent)
outlierKD(completedZ, completedZ$sat_precip_amt_mm_log)
outlierKD(completedZ, completedZ$tdtr_k)
outlierKD(completedZ, completedZ$station_avg_temp_c)
outlierKD(completedZ, completedZ$station_diur_temp_rng_c)
outlierKD(completedZ, completedZ$station_max_temp_c)
outlierKD(completedZ, completedZ$station_min_temp_c)
outlierKD(completedZ, completedZ$station_precip_mm_log)

completedZ$precipitation_amt_mm_log <- ifelse(completedZ$precipitation_amt_mm_log < 0, 0, completedZ$precipitation_amt_mm_log)
completedZ$precip_amt_kg_per_m2_log <- ifelse(completedZ$precip_amt_kg_per_m2_log <0, 0 , completedZ$precip_amt_kg_per_m2_log)
completedZ$sat_precip_amt_mm_log <- ifelse(completedZ$sat_precip_amt_mm_log <0 , 0, completedZ$sat_precip_amt_mm_log)
completedZ$station_precip_mm_log <- ifelse(completedZ$station_precip_mm_log <0, 0, completedZ$station_precip_mm_log)
completedZ$total_cases_log <- ifelse(DBmergedtrain$total_cases_log <0, 0, DBmergedtrain$total_cases_log)

X <- cbind(completedZ$ndvi_se, completedZ$ndvi_sw, completedZ$precipitation_amt_mm_log , completedZ$air_temp_k , completedZ$avg_temp_k , completedZ$dew_point_temp_k , completedZ$max_air_temp_k,  completedZ$min_air_temp_k , completedZ$precip_amt_kg_per_m2_log ,completedZ$relative_humidity_percent , completedZ$sat_precip_amt_mm_log ,completedZ$tdtr_k , completedZ$station_avg_temp_c ,completedZ$station_diur_temp_rng_c , completedZ$station_max_temp_c , completedZ$station_min_temp_c , completedZ$station_precip_mm_log)

Y <- cbind(DcompletedZ$total_cases_log , completedZ$total_cases, completedZ$city , completedZ$year , completedZ$weekofyear, completedZ$week_start_date)

tempX <- mice(X,m=5,maxit=50,meth='pmm',seed=500)
completedX <- complete(tempX,1)

DBmergedtrain <- cbind (Y, completedX)

names(DBmergedtrain)[names(DBmergedtrain)=="1"] <- "total_cases_log"
names(DBmergedtrain)[names(DBmergedtrain)=="2"] <- "total_cases"
names(DBmergedtrain)[names(DBmergedtrain)=="3"] <- "city"
names(DBmergedtrain)[names(DBmergedtrain)=="4"] <- "year"
names(DBmergedtrain)[names(DBmergedtrain)=="5"] <- "weekofyear"
names(DBmergedtrain)[names(DBmergedtrain)=="6"] <- "week_start_date
names(DBmergedtrain)[names(DBmergedtrain)=="V1"] <- "ndvi_ne_numeric" 
names(DBmergedtrain)[names(DBmergedtrain)=="V2"] <- "ndvi_nw_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V3"] <- "ndvi_se_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V4"] <- "ndvi_sw_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V5"] <- "precipitation_amt_mm_numeric_log"
names(DBmergedtrain)[names(DBmergedtrain)=="V6"] <- "reanalysis_air_temp_k_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V7"] <- "reanalysis_avg_temp_k_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V8"] <- "reanalysis_dew_point_temp_k_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V9"] <- "reanalysis_max_air_temp_k_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V10"] <- "reanalysis_min_air_temp_k_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V11"] <- "reanalysis_precip_amt_kg_per_m2_numeric_log"
names(DBmergedtrain)[names(DBmergedtrain)=="V12"] <- "reanalysis_relative_humidity_percent_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V13"] <- "reanalysis_sat_precip_amt_mm_numeric_log"
names(DBmergedtrain)[names(DBmergedtrain)=="V14"] <- "reanalysis_specific_humidity_g_per_kg_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V15"] <- "reanalysis_tdtr_k_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V16"] <- "station_avg_temp_c_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V17"] <- "station_diur_temp_rng_c_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V18"] <- "station_max_temp_c_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V19"] <- "station_min_temp_c_numeric"
names(DBmergedtrain)[names(DBmergedtrain)=="V20"] <- "station_precip_mm_numeric_log"















M <- cor(X, use="pairwise.complete.obs",method="pearson")
corrplot(M, method="number")

install.packages("corrplot")
library(corrplot)